"use client"

import { useEffect, useState } from "react"
import { Card, CardContent } from "@/components/ui/card"
import { Skeleton } from "@/components/ui/skeleton"
import DailyRecapDisplay from "@/components/shared/daily-recap-display"

function LoadingSkeleton() {
  return (
    <div className="space-y-6">
      <Card>
        <CardContent className="p-6">
          <Skeleton className="h-8 w-64 mb-2" />
          <Skeleton className="h-4 w-96 mb-4" />
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <Skeleton className="h-24 w-full" />
            <Skeleton className="h-24 w-full" />
          </div>
        </CardContent>
      </Card>
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {[1, 2, 3, 4].map((i) => (
          <Card key={i}>
            <CardContent className="p-6">
              <Skeleton className="h-6 w-32 mb-2" />
              <Skeleton className="h-4 w-48 mb-4" />
              <div className="space-y-2">
                <Skeleton className="h-4 w-full" />
                <Skeleton className="h-4 w-full" />
                <Skeleton className="h-4 w-3/4" />
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  )
}

export default function ClientDailyRecapPage() {
  const [recapData, setRecapData] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  useEffect(() => {
    async function fetchRecap() {
      try {
        console.log("Fetching recap client-side...")

        const response = await fetch("/api/daily-recap/saved", {
          cache: "no-store",
          headers: {
            "Content-Type": "application/json",
          },
        })

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`)
        }

        const result = await response.json()

        if (result.success && result.data) {
          console.log("Successfully loaded recap client-side")
          setRecapData(result.data)
        } else {
          console.log("No recap data found")
          setRecapData(null)
        }
      } catch (err) {
        console.error("Error fetching recap:", err)
        setError(err.message)
      } finally {
        setLoading(false)
      }
    }

    fetchRecap()
  }, [])

  if (loading) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold">Daily Recap</h1>
          <p className="text-muted-foreground mt-2">Comprehensive analysis of recent matches and team performances</p>
        </div>
        <LoadingSkeleton />
      </div>
    )
  }

  if (error) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold">Daily Recap</h1>
          <p className="text-muted-foreground mt-2">Comprehensive analysis of recent matches and team performances</p>
        </div>
        <Card>
          <CardContent className="text-center py-8">
            <p className="text-red-500">Error loading daily recap: {error}</p>
            <p className="text-sm text-muted-foreground mt-2">
              Please try refreshing the page or contact an administrator.
            </p>
          </CardContent>
        </Card>
      </div>
    )
  }

  if (!recapData) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold">Daily Recap</h1>
          <p className="text-muted-foreground mt-2">Comprehensive analysis of recent matches and team performances</p>
        </div>
        <Card>
          <CardContent className="text-center py-8">
            <p className="text-muted-foreground">No daily recap available yet.</p>
            <p className="text-sm text-muted-foreground mt-2">
              Recaps are generated by administrators and will appear here once available.
            </p>
            <p className="text-xs text-muted-foreground mt-4">
              If you're an admin, generate a recap from the admin panel to see it here.
            </p>
          </CardContent>
        </Card>
      </div>
    )
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="mb-8">
        <h1 className="text-3xl font-bold">Daily Recap</h1>
        <p className="text-muted-foreground mt-2">Comprehensive analysis of recent matches and team performances</p>
      </div>
      <DailyRecapDisplay recapData={recapData} showFullRoster={true} />
    </div>
  )
}
